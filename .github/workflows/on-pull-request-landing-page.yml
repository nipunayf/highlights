name: Build landing page check

env:
  APP_DIR: src/landingpage

on:
  pull_request:
    branches:
      - main
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '20'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/${{ env.APP_DIR }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/${{ env.APP_DIR }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          # Using job-level environment variable
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.APP_DIR }}/package-lock.json

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.APP_DIR }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles(format('{0}/**/package-lock.json', env.APP_DIR), format('{0}/**/yarn.lock', env.APP_DIR)) }}-${{ hashFiles(format('{0}/**.[jt]s', env.APP_DIR), format('{0}/**.[jt]sx', env.APP_DIR)) }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles(format('{0}/**/package-lock.json', env.APP_DIR), format('{0}/**/yarn.lock', env.APP_DIR)) }}-

      - name: Install dependencies
        working-directory: ${{ env.APP_DIR }}
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        working-directory: ${{ env.APP_DIR }}
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
